{"name":"Cronicle","tagline":"It is a tool for execute script, and define cron on remote hosts.","body":"[![Gem Version](https://badge.fury.io/rb/cronicle.svg)](http://badge.fury.io/rb/cronicle)\r\n[![Build Status](https://travis-ci.org/winebarrel/cronicle.svg?branch=master)](https://travis-ci.org/winebarrel/cronicle)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'cronicle'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install cronicle\r\n\r\n## Usage\r\n\r\n```\r\nCommands:\r\n  cronicle apply           # Apply cron jobs to remote hosts\r\n  cronicle exec JOB_NAME   # Execute a job on remote hosts\r\n  cronicle help [COMMAND]  # Describe available commands or one specific command\r\n\r\nOptions:\r\n  -f, [--file=FILE]                    # Job definition file\r\n                                       # Default: Jobfile\r\n  -h, [--hosts=HOSTS]                  # Hosts definition file\r\n  -r, [--target-roles=one two three]   # Target host role list\r\n  -p, [--sudo-password=SUDO-PASSWORD]  # Sudo password\r\n      [--ask-pass], [--no-ask-pass]    # Ask sudo password\r\n      [--dry-run], [--no-dry-run]      # Do not actually change\r\n  -c, [--ssh-config=SSH-CONFIG]        # OpenSSH configuration file\r\n      [--ssh-options=SSH-OPTIONS]      # SSH options (JSON)\r\n      [--connection-timeout=N]         # SSH connection timeout\r\n      [--concurrency=N]                # SSH concurrency\r\n                                       # Default: 10\r\n      [--libexec=LIBEXEC]              # Cronicle libexec path\r\n                                       # Default: /var/lib/cronicle/libexec\r\n  -v, [--verbose], [--no-verbose]      # Verbose mode\r\n      [--debug], [--no-debug]          # Debug mode\r\n      [--color], [--no-color]          # Colorize log\r\n                                       # Default: true\r\n```\r\n\r\n## Quick Start\r\n\r\n```sh\r\n$ cat Jobfile\r\non servers: :your_hostname do\r\n  job :my_job, user: \"ec2-user\", schedule: \"* * * * *\" do\r\n    puts \"hello\"\r\n  end\r\nend\r\n\r\n$ cronicle exec my_job\r\nmy_job on your_hostname/ec2-user> Execute job\r\nmy_job on your_hostname/ec2-user> hello\r\n\r\n$ cronicle apply --dry-run\r\nmy_job on your_hostname/ec2-user> Create job: schedule=\"* * * * *\" (dry-run)\r\n\r\n$ cronicle apply\r\nmy_job on your_hostname/ec2-user> Create job: schedule=\"* * * * *\"\r\n\r\n$ ssh your_hostname 'crontab -l'\r\n* * * * * /var/lib/cronicle/libexec/ec2-user/my_job 2>&1 | logger -t cronicle/ec2-user/my_job\r\n\r\n$ ssh your_hostname 'cat /var/lib/cronicle/libexec/ec2-user/my_job'\r\n#!/usr/bin/env ruby\r\nputs \"hello\"\r\n```\r\n\r\n## Jobfile example\r\n\r\n```ruby\r\non servers: :your_hostname do\r\n  job :my_job, user: \"ec2-user\", schedule: \"* * * * *\" do\r\n    puts \"hello\"\r\n  end\r\n\r\n  job :my_job2, user: \"ec2-user\", schedule: \"* * * * *\", content: <<-EOS\r\n    #!/bin/sh\r\n    echo hello\r\n  EOS\r\nend\r\n```\r\n\r\n## Hosts definition file\r\n\r\nAny of the following formats:\r\n\r\n```\r\nserver1,server2,...\r\n```\r\n```\r\nserver1\r\nserver2\r\n...\r\n```\r\n```javascript\r\n{\r\n  \"servers\": {\r\n    \"server1\": [\"web\", \"app\"]\r\n    \"server2\": [\"db\"]\r\n  }\r\n}\r\n```\r\n```javascript\r\n{\r\n  \"roles\": {\r\n    \"web\": [\"server1\"],\r\n    \"app\": [\"server1\"],\r\n    \"db\": [\"server2\"]\r\n  }\r\n}\r\n```\r\n\r\nHosts definition file is not required.\r\n\r\nIf you pass `--hosts` options, can be defined as follows in Jobfile:\r\n\r\n```ruby\r\non servers: /any_host/ do # use regexp\r\n  job :foo, user: \"ec2-user\", schedule: \"* * * * *\" do\r\n    3.times do\r\n      puts \"hello\"\r\n    end\r\n  end\r\nend\r\n\r\non roles: \"web\" do # use role\r\n  job :my_job, user: \"ec2-user\", schedule: \"* * * * *\" do\r\n    puts \"hello\"\r\n  end\r\nend\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}